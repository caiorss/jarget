#+TITLE:  Jarget - Java Platform Command Line Toolbox
#+AUTHOR:   Caio Rodrigues
#+KEYWORDS: jarget jar tool java scala automation deployment toolbox uber fatjar 
#+STARTUP: content
#+INFOJS_OPT: view:info toc:t ltoc:t ftoc:nil mouse:underline button:nil path:theme/org-info.js
#+HTML_HEAD: <link href="style.css" rel="stylesheet"> 


* Jarget 
** Overview 

Jarget is a command line application to download java libraries or jar
files from Maven Central in a easy and fast way without the need to
set up a project. It is useful to experiment java libraries with
languages hosted in JVM such as Jython (Python implemented in Java),
Scala or Clojure. 

*Features:* 

 + Download Scala and Java libraries from https://mvnrepository.com/
   without creating a project. It is useful for quick experiments and
   library evaluation.

 + Display information about Java packages.

 + Start Scala with all jar files from directory loaded in Classpath.

 + Run scala compiler with all jars from some directory in classpath.

 + Parallallel download of dependencies.

 + Inspect and extract data from jar files.

   + Show MANIFEST

   + Display files

   + Show assets

   + Extract files 

 + Build uber jar, jar file bundled with all dependencies making
   deployment and distribution easier.

 + Build self-exectutable *nix uber jar file that can be run with ./application

** Use Case Example 

Evaluation of Scala cats library, based on [[https://medium.com/@abu_nadhr/scala-cats-library-for-dummies-part-1-8ec47af7a144][Scala Cats library for dummies — part 1]]

Jarget allows evaluation of Scala libraries without the need to
create a project or complicated Maven directory structure. 

Instead of creating a SBT project with:

#+BEGIN_SRC text
libraryDependencies += "org.typelevel" %% "cats" % "0.7.2"
#+END_SRC

It is possible to: 

 1. Get information about the library. Note: 2.11 is the Scala version.

#+BEGIN_SRC sh 
$ jarget mvn -show org.typelevel/cats_2.11/0.7.2
Package:         catsJVM
Packaging:       jar
Coordinates[1]:  group = org.typelevel artifact = cats_2.11 version = 0.7.2
Coordinates[2]:  org.typelevel/cats_2.11/0.7.2
Url:             https://github.com/typelevel/cats
Description:     catsJVM

Dependencies:

  - org.scala-lang/scala-library/2.11.8

  - org.typelevel/cats-macros_2.11/0.7.2

  - org.typelevel/cats-kernel_2.11/0.7.2

  - org.typelevel/cats-kernel-laws_2.11/0.7.2

  - org.typelevel/cats-core_2.11/0.7.2

  - org.typelevel/cats-laws_2.11/0.7.2

  - org.typelevel/cats-free_2.11/0.7.2

  - org.typelevel/cats-jvm_2.11/0.7.2

  - com.github.mpilquist/simulacrum_2.11/0.8.0

  - org.typelevel/machinist_2.11/0.4.1

#+END_SRC

 2. Install it.

#+BEGIN_SRC sh
$ jarget mvn -get scala 2.11 org.typelevel/cats/0.7.2

Downloading package PackData(org.typelevel,machinist_2.11,0.4.1)
Downloading file ./lib/machinist_2.11-0.4.1.pom.

 ... ... ... ... ... ... ... ... ... ... ... ... 

File ./lib/cats-free_2.11-0.7.2.jar downloaded. Ok.
Downloading file ./lib/cats-laws_2.11-0.7.2.pom.
File ./lib/cats-laws_2.11-0.7.2.pom downloaded. Ok.
Downloading file ./lib/cats-laws_2.11-0.7.2.jar.
File ./lib/cats-laws_2.11-0.7.2.jar downloaded. Ok.

$ ls lib
cats_2.11-0.7.2.jar       cats-kernel_2.11-0.7.2.jar       machinist_2.11-0.4.1.jar
cats_2.11-0.7.2.pom       cats-kernel_2.11-0.7.2.pom       machinist_2.11-0.4.1.pom
cats-core_2.11-0.7.2.jar  cats-kernel-laws_2.11-0.7.2.jar  scala-library-2.11.8.jar
cats-core_2.11-0.7.2.pom  cats-kernel-laws_2.11-0.7.2.pom  scala-library-2.11.8.pom
cats-free_2.11-0.7.2.jar  cats-laws_2.11-0.7.2.jar         simulacrum_2.11-0.8.0.jar
cats-free_2.11-0.7.2.pom  cats-laws_2.11-0.7.2.pom         simulacrum_2.11-0.8.0.pom
cats-jvm_2.11-0.7.2.jar   cats-macros_2.11-0.7.2.jar
cats-jvm_2.11-0.7.2.pom   cats-macros_2.11-0.7.2.pom

#+END_SRC

It also could be done with: 

#+BEGIN_SRC sh
$ jarget mvn -get org.typelevel/cats_2.11/0.7.2
Download Successful
#+END_SRC

Show class path with all jars from directory ./lib 

#+BEGIN_SRC sh 
$ jarget cpath -show
./lib/cats-free_2.11-0.7.2.jar:./lib/machinist_2.11-0.4.1.jar:./lib/cats-core_2.11-0.7.2.jar...

#+END_SRC

Load Scala REPL with all jars from ./lib in classpath and test the
package: 

#+BEGIN_SRC scala 
$ jarget scala 
Welcome to Scala 2.12.3 (Java HotSpot(TM) 64-Bit Server VM, Java 9).
Type in expressions for evaluation. Or try :help.

scala> import cats._, cats.instances.all._ 
import cats._
import cats.instances.all._

scala> val len: String => Int = _.length
len: String => Int = $$Lambda$1089/1057262726@255d9277

scala> Functor[List].map(List("scala", "cats")) (len)
res0: List[Int] = List(5, 4)

scala> 

#+END_SRC

** User Guide
*** Show version 
 
 - =$ jarget -v= or =$ jarget -version= 

#+BEGIN_SRC sh 
$ ./jarget -v
Jarget v1.3

$ ./jarget -version
Jarget v1.3
#+END_SRC

*** Show user help 

#+BEGIN_SRC text 
$ bin/jarget 
jarget 1.4.0 -  Java platform Toolbox
General 

 -h              - show help 
 -v | -version   - show version 

Maven Packages / Jar Packages

 mvn -show [package]                 - Show package's information

 mvn -pom  [package]                 - Show package's pom file

 mvn -get  [package]                 - Download package and dependencies to ./lib

 mvn -get  [package] -dir [path]     - Download package and dependencies to [path] directory.

 mvn -get scala [version] [package]  - Download a Scala package for an specific Scala version.

 mvn -search   [query]               - Search a package in search.maven.org, opening results in 
                                       the browser.

 mvn -search2  [query]               - Search a package showing results in the console. (Experimental)

 mvn -browse [package]               - Open package official website.

 mvn -go                             - Open web site https://mvnrepository.com
 mvn -go [package]                   - Open package mvnrepository url.

 mvn -clip -show                     - Extract package from XML in clipboard and show its information.
 mvn -clip -pom                      - Extract package from XML in clipboard and show its Pom file.
 mvn -clip -get                      - Extract package from XML in clipboard and download it to ./lib

Jar Files Inspection

 jar -man  [jar]                    - Show manifest.
 jar -main [jar]                    - Show main class.
 jar -show [jar]                    - Show all files.

 jar -assets [jar]                  - Show all asset files disregarding *.class files.

 jar -extract [jar] [file]          - Extract [file] from [jar] package to current directory.
 jar -extract [jar] [file] [path]   - Extract [file] from [jar] package to [path] directory.

 jar -extract-all [jar] [path]      - Extract all files from jar package to [path] directory.

 jar -extract-all [jar]             - Extract jar file to directory with same name of jar file 
                                      at current directory. If file is lib/chart.jar it will  
                                      extracted to ./chart 
    
Uber Jar 


 - Build an scala uber jar named output.jar from main.jar which
   contains the main class and lib1 and lib2 are the directories
   containing jar files. It bundles the scala-library.jar runtime with
   the application.

 $ jar uber -scala -o output.jar -m main.jar

 $ jar uber -scala -o output.jar -m main.jar -p ./lib1 ./lib2 
  
 $ jar uber -scala -sh -o output.jar -m main.jar -p ./lib1 -j dependency1.jar -r ./resources1 ./resources2 

 uber [command]

   -o [output file]         - (mandatory) Output jar file bundled with all dependencies.
   -m [main jar file]       - (optional)  Jar file containing main class.
   -p [path1] [path2] ...   - (optional)  Directories with jar file that will be included in the uber jar.
   -j [jar1.jar] [jar2.jar] - (optional)  Single jar files that will be included in the uber jar.
   -r [dir1] [dir2] ...     - (optional)  Directories containing resource files 
   -scala                   - (optional)  Bundles the scala-library.jar file with the uber.jar 
   -sh                      - (optional)  Makes the jar file as a self-executable Unix app.                                 

Classpath

 cpath -show                        - Get classpath from ./lib directory
 cpath -show [path]                 - Get classpath from [path] directory

Exec  

 exec [program] [path] 
 exec [program] -- arg1 arg2 ...      - Executes a program passing classpath (-cp) from ./lib to it.
 exec [program] [path] -- arg1 arg2 
  

Utilities

 utils -doc                            - Open jarget's website - https://github.com/caiorss/jarget
 utils -env                            - Show environment variables in tabular format 
 utils -env [var]                      - Show environment variable [var]
 utils -path                           - Show PATH environment variable 
 utils -prop                           - Show java properties in tabular format 
 utils -expath [program]               - Show absolute path of a program in PATH variable


Crypto Hash Functions 

 - Computes the file hash hex digest.
 digest -md5    -f [file]              
 digest -sha1   -f [file]
 digest -sha256 -f [file] 

 - Checks the file hex digest.
 digest -md5    -f [file]  [digest]     
 digest -sha1   -f [file]  [digest]
 digest -sha256 -f [file]  [digest]

 - Computes the string hex digest.
 digest -md5    -s [string]             
 digest -sha1   -s [string]
 digest -sha256 -s [string]

 - Checks the string hex digest.
 digest -md5    -s [string]  [digest]    
 digest -sha1   -s [string]  [digest]
 digest -sha256 -s [string]  [digest]

Note: [package] is <group>/<artifact>/<version>.
Examples of valid packages:

  - org.scalaz/scalaz-core_2.11/7.3.0-M15

  - org.jfree/jfreechart/1.0.17

Note: The XML in the clipboard is a maven coordinate: 

    <!-- https://mvnrepository.com/artifact/org.scalaz/scalaz-core_2.11 -->
    <dependency>
        <groupId>org.scalaz</groupId>
        <artifactId>scalaz-core_2.11</artifactId>
        <version>7.3.0-M15</version>
    </dependency>

#+END_SRC

*** Maven / Packages Commands
**** Show package information 

 - =$ jarget mvn -show org.jfree/jfreechart/1.0.17=

#+BEGIN_SRC sh 
  $ jarget mvn -show org.jfree/jfreechart/1.0.17
  Package:         JFreeChart
  Packaging:       jar
  Coordinates[1]:  group = org.jfree artifact = jfreechart version = 1.0.17
  Coordinates[2]:  org.jfree/jfreechart/1.0.17
  Url:             http://www.jfree.org/jfreechart/
  Description:     
      JFreeChart is a class library, written in Java, for generating charts. 
      Utilising the Java2D APIs, it currently supports bar charts, pie charts, 
      line charts, XY-plots and time series plots.
      

  Dependencies:

    - org.jfree/jcommon/1.0.21

    - xml-apis/xml-apis/1.3.04

#+END_SRC
**** Show package's POM file 

 - =$ jarget mvn -pom org.jfree/jfreechart/1.0.17=

#+BEGIN_SRC sh 
$ jarget -pom org.jfree/jfreechart/1.0.17

<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0  ... 

    <modelVersion>4.0.0</modelVersion>

    <name>JFreeChart</name>

    <artifactId>jfreechart</artifactId>
    <groupId>org.jfree</groupId>
    <version>1.0.17</version>
    <packaging>jar</packaging>

    
    <parent>
        <groupId>org.sonatype.oss</groupId>
        <artifactId>oss-parent</artifactId>
        <version>7</version>
    </parent>

    <organization>
        <name>JFree.org</name>
        <url>http://www.jfree.org/</url>
    </organization>
    <inceptionYear>2001</inceptionYear>

    <description>
    JFreeChart is a class library, written in Java, for generating charts. 
    Utilising the Java2D APIs, it currently supports bar charts, pie charts, 
    line charts, XY-plots and time series plots.
    </description>

... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ...

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.source.level>1.6</project.source.level>
        <project.target.level>1.6</project.target.level>
    </properties>
</project>

#+END_SRC
**** Open package Maven URL 
 
 = =$ jarget mvn -go org.jfree/jfreechart/1.0.17= 

It will open the Mvn site of the package JFreeChart or:
 - https://mvnrepository.com/artifact/org.jfree/jfreechart/1.0.17  

**** Open Maven Central 

  - =$ jarget mvn -go=

**** Install jar files 

It will install the JFreeChart jar files into ./lib directories. 

 - =$ jarget mvn -get org.jfree/jfreechart/1.0.17=

#+BEGIN_SRC sh 
$ jarget mvn -get org.jfree/jfreechart/1.0.17

Downloading package PackData(org.jfree,jfreechart,1.0.17)
Downloading file ./lib/jfreechart-1.0.17.pom.
Downloading package PackData(org.jfree,jcommon,1.0.21)
Downloading package PackData(xml-apis,xml-apis,1.3.04)
Downloading file ./lib/jcommon-1.0.21.pom.
Downloading file ./lib/xml-apis-1.3.04.pom.
File ./lib/jfreechart-1.0.17.pom downloaded. Ok.
Downloading file ./lib/jfreechart-1.0.17.jar.
File ./lib/xml-apis-1.3.04.pom downloaded. Ok.
Downloading file ./lib/xml-apis-1.3.04.jar.
File ./lib/jcommon-1.0.21.pom downloaded. Ok.
Downloading file ./lib/jcommon-1.0.21.jar.
File ./lib/xml-apis-1.3.04.jar downloaded. Ok.
File ./lib/jcommon-1.0.21.jar downloaded. Ok.
File ./lib/jfreechart-1.0.17.jar downloaded. Ok.
Download Successful

$ ls lib/
jcommon-1.0.21.jar  jfreechart-1.0.17.jar  xml-apis-1.3.04.jar
jcommon-1.0.21.pom  jfreechart-1.0.17.pom  xml-apis-1.3.04.pom

#+END_SRC

Testing with Scala:  

#+BEGIN_SRC scala 
  $ scala -cp lib/jcommon-1.0.21.jar:lib/jfreechart-1.0.17.jar

  :paste
  import org.jfree.chart.{ChartPanel, ChartFactory, JFreeChart, ChartUtilities}
  import org.jfree.data.general.DefaultPieDataset

  val dataset = new DefaultPieDataset()

  dataset.setValue("A", 75)
  dataset.setValue("B", 10)
  dataset.setValue("C", 10)
  dataset.setValue("D", 5)

  val chart = ChartFactory.createPieChart(
    "Sample Pie Chart", // Title
    dataset,            // Dataset 
    true,               // Show legend
    true,               // Tooltips on
    false 
  )

  // Save chart to a png file 
  //---------------------------
  ChartUtilities.saveChartAsPNG(new java.io.File("mychart.png"), chart, 500, 500)

  // Show Chart in a Java Swing Frame
  //--------------------------------------
  val frame = new javax.swing.JFrame()
  frame.add(new ChartPanel(chart))
  frame.setDefaultCloseOperation(javax.swing.JFrame.EXIT_ON_CLOSE)
  frame.setSize(693, 513)
  frame.setTitle("Sample Pie Chart")
  frame.setVisible(true)
#+END_SRC
**** Install a Scala package jar file

 - =$ jarget mvn -get scala [scala version] [package]=

Example: It will download the scala package [[https://mvnrepository.com/artifact/org.typelevel/cats-core_2.12/0.9.0][cats-core]] for scala version
2.12 and all its dependencies to directory ./lib.

#+BEGIN_SRC sh 
  $ jarget mvn -get scala 2.12 org.typelevel/cats-core/0.9.0

  Downloading package PackData(org.typelevel,cats-macros_2.12,0.9.0)
  Downloading file ./lib/cats-macros_2.12-0.9.0.pom.
  Downloading package PackData(org.typelevel,cats-kernel_2.12,0.9.0)
  Downloading package PackData(org.typelevel,cats-core_2.12,0.9.0)
  Downloading file ./lib/cats-kernel_2.12-0.9.0.pom.
  Downloading package PackData(com.github.mpilquist,simulacrum_2.12,0.10.0)
  Downloading file ./lib/cats-core_2.12-0.9.0.pom.
  Downloading package PackData(org.typelevel,machinist_2.12,0.6.1)
  Downloading package PackData(org.scala-lang,scala-library,2.12.1)
  Downloading file ./lib/simulacrum_2.12-0.10.0.pom.
  File ./lib/cats-macros_2.12-0.9.0.pom downloaded. Ok.
  Downloading file ./lib/cats-macros_2.12-0.9.0.jar.
  File ./lib/cats-core_2.12-0.9.0.pom downloaded. Ok.
  Downloading file ./lib/cats-core_2.12-0.9.0.jar.
  File ./lib/simulacrum_2.12-0.10.0.pom downloaded. Ok.
  Downloading file ./lib/simulacrum_2.12-0.10.0.jar.
  File ./lib/cats-kernel_2.12-0.9.0.pom downloaded. Ok.
  Downloading file ./lib/cats-kernel_2.12-0.9.0.jar.
  File ./lib/cats-macros_2.12-0.9.0.jar downloaded. Ok.
  Downloading file ./lib/machinist_2.12-0.6.1.pom.
  File ./lib/machinist_2.12-0.6.1.pom downloaded. Ok.
  Downloading file ./lib/machinist_2.12-0.6.1.jar.
  File ./lib/simulacrum_2.12-0.10.0.jar downloaded. Ok.
  Downloading file ./lib/scala-library-2.12.1.pom.
  File ./lib/machinist_2.12-0.6.1.jar downloaded. Ok.
  File ./lib/scala-library-2.12.1.pom downloaded. Ok.
  Downloading file ./lib/scala-library-2.12.1.jar.
  File ./lib/scala-library-2.12.1.jar downloaded. Ok.
  File ./lib/cats-core_2.12-0.9.0.jar downloaded. Ok.
  File ./lib/cats-kernel_2.12-0.9.0.jar downloaded. Ok.
  Download Successful


  $ ls -l lib/
  total 12084
  -rw-r--r-- 1 archbox archbox 2696252 ago 15 16:34 cats-core_2.12-0.9.0.jar
  -rw-r--r-- 1 archbox archbox    4592 ago 15 16:34 cats-core_2.12-0.9.0.pom
  -rw-r--r-- 1 archbox archbox 4241540 ago 15 16:35 cats-kernel_2.12-0.9.0.jar
  -rw-r--r-- 1 archbox archbox    3665 ago 15 16:34 cats-kernel_2.12-0.9.0.pom
  -rw-r--r-- 1 archbox archbox    6438 ago 15 16:34 cats-macros_2.12-0.9.0.jar
  -rw-r--r-- 1 archbox archbox    4028 ago 15 16:34 cats-macros_2.12-0.9.0.pom
  -rw-r--r-- 1 archbox archbox   33650 ago 15 16:34 machinist_2.12-0.6.1.jar
  -rw-r--r-- 1 archbox archbox    1780 ago 15 16:34 machinist_2.12-0.6.1.pom
  -rw-r--r-- 1 archbox archbox 5272325 ago 15 16:34 scala-library-2.12.1.jar
  -rw-r--r-- 1 archbox archbox    1587 ago 15 16:34 scala-library-2.12.1.pom
  -rw-r--r-- 1 archbox archbox   81815 ago 15 16:34 simulacrum_2.12-0.10.0.jar
  -rw-r--r-- 1 archbox archbox    2068 ago 15 16:34 simulacrum_2.12-0.10.0.pom
#+END_SRC

*** Jar Files Commands 
**** Show manifest file 

 - =$ jarget jar [jar]=

#+BEGIN_SRC sh 
$ jarget jar -manifest lib/jfreechart-1.0.17.jar 

Manifest-Version: 1.0
Ant-Version: Apache Ant 1.8.2
Created-By: 1.7.0_21-b12 (Oracle Corporation)
Specification-Title: JFreeChart
Specification-Version: 1.0.17
Specification-Vendor: jfree.org
Implementation-Title: JFreeChart
Implementation-Version: 1.0.17
Implementation-Vendor: jfree.org

#+END_SRC

**** Show contents of single file 

 - =$ jarget jar -cat [jar] [file]=

#+BEGIN_SRC sh 
  $ jarget jar -cat lib/jfreechart-1.0.17.jar META-INF/MANIFEST.MF

  Manifest-Version: 1.0
  Ant-Version: Apache Ant 1.8.2
  Created-By: 1.7.0_21-b12 (Oracle Corporation)
  Specification-Title: JFreeChart
  Specification-Version: 1.0.17
  Specification-Vendor: jfree.org
  Implementation-Title: JFreeChart
  Implementation-Version: 1.0.17
  Implementation-Vendor: jfree.org

  ... .... ... .... ... .... ... .... ... ....

  $ jarget jar -cat lib/jfreechart-1.0.17.jar org/jfree/chart/plot/LocalizationBundle_pt_PT.properties
  # org.jfree.chart.ChartPanel ResourceBundle properties file - portuguese version
  # 
  # Changes (from 09-Set-2003)
  # --------------------------
  # 09-Set-2003 : Initial version (Eduardo Ramalho);
  #

  Category_Plot=Barras
  Combined_Domain_XYPlot=Curvas combinadas pela abcissa
  Combined_Range_XYPlot=Curvas combinadas pela ordenada
  Compass_Plot=Compasso
  Contour_Plot=Contours
  Fast_Scatter_Plot=Dispers\u00E3o
  Meter_Plot=N\u00EDvel
  Period_Marker_Plot=Period Marker Plot
  Pie_Plot=Sectores
  Thermometer_Plot=Term\u00a2metro
  XY_Plot=Curvas
  Pie_3D_Plot=Sectores 3D
  Too_many_elements=Too many elements

  # points of the compass
  N=N
  E=E
  S=S
  W=W


#+END_SRC

**** List all files 
 
 - =$ jarget jar -show [jar]=

#+BEGIN_SRC sh 
$ jarget jar -show jarget.jar 

META-INF/MANIFEST.MF
PackData.class
PackData$.class
PomData.class
PomData$.class
Utils.class
Utils$.class
JarUtils.class
JarUtils$.class
Packget.class
Packget$.class
Main.class
Main$.class
Packget$$anonfun$downloadPackage$4.class
Packget$$anonfun$downloadPackage$5.class

#+END_SRC

**** List asset files 

 - =$ jarget jar -assets [jar]=

#+BEGIN_SRC sh 
$ jarget jar -assets lib/jfreechart-1.0.17.jar 
META-INF/MANIFEST.MF
org/jfree/chart/LocalizationBundle.properties
org/jfree/chart/LocalizationBundle_cs.properties
org/jfree/chart/LocalizationBundle_de.properties
org/jfree/chart/LocalizationBundle_es.properties
org/jfree/chart/LocalizationBundle_fr.properties
org/jfree/chart/LocalizationBundle_it.properties

 ... ... ... ...  ... ... ... ...  ... ... ... ... 

org/jfree/chart/plot/LocalizationBundle_ru.properties
org/jfree/chart/plot/LocalizationBundle_zh_CN.properties
#+END_SRC

**** Extract file to current directory

 - =jarget jar -extract [jar] [file]=

Extract file from jar to current directory.

#+BEGIN_SRC sh 
$ jarget jar -extract lib/jfreechart-1.0.17.jar META-INF/MANIFEST.MF

$ cat MANIFEST.MF 
Manifest-Version: 1.0
Ant-Version: Apache Ant 1.8.2
Created-By: 1.7.0_21-b12 (Oracle Corporation)
Specification-Title: JFreeChart
Specification-Version: 1.0.17
Specification-Vendor: jfree.org
Implementation-Title: JFreeChart
Implementation-Version: 1.0.17
Implementation-Vendor: jfree.org


#+END_SRC
**** Extract file to a directory 

 - =jarget jar -extract [jar] [file] [path]=

Extract file META-INF/MANIFEST.MF from jfreechart-1.0.17.jar to path ./lib.

#+BEGIN_SRC sh 
$ jarget jar -extract lib/jfreechart-1.0.17.jar META-INF/MANIFEST.MF lib

$ cat lib/MANIFEST.MF 
Manifest-Version: 1.0
Ant-Version: Apache Ant 1.8.2
Created-By: 1.7.0_21-b12 (Oracle Corporation)
Specification-Title: JFreeChart
Specification-Version: 1.0.17
Specification-Vendor: jfree.org
Implementation-Title: JFreeChart
Implementation-Version: 1.0.17
Implementation-Vendor: jfree.org

#+END_SRC
*** Build Uber Jar 

#+BEGIN_SRC text 
 jarget uber [command]
 
 Commands

   -o [output file]         - (mandatory) Output jar file bundled with all dependencies.
   -m [main jar file]       - (optional)  Jar file containing main class.
   -p [path1] [path2] ...   - (optional)  Directories with jar file that will be included in the uber jar.
   -j [jar1.jar] [jar2.jar] - (optional)  jar files that will be included in the uber jar.
   -r [dir1] [dir2] ...     - (optional)  Directories containing resource files 
   -scala                   - (optional)  Bundles the scala-library.jar file with the uber.jar 
   -sh                      - (optional)  Makes the jar file as a self-executable Unix app.                                 
#+END_SRC


Example: Make a scala uber jar from the program [[file:sample-scripts/chartTest.scala][file:sample-scripts/chartTest.scala]] 

#+BEGIN_SRC sh 

# Download dependencies 
$ ./jarget mvn -get org.jfree/jfreechart/1.0.17

Downloading package PackData(org.jfree,jfreechart,1.0.17)
Downloading file ./lib/jfreechart-1.0.17.pom.
Downloading package PackData(org.jfree,jcommon,1.0.21)
Downloading package PackData(xml-apis,xml-apis,1.3.04)
Downloading file ./lib/jcommon-1.0.21.pom.
Downloading file ./lib/xml-apis-1.3.04.pom.
File ./lib/jfreechart-1.0.17.pom downloaded. Ok.
Downloading file ./lib/jfreechart-1.0.17.jar.
File ./lib/jcommon-1.0.21.pom downloaded. Ok.
Downloading file ./lib/jcommon-1.0.21.jar.
File ./lib/xml-apis-1.3.04.pom downloaded. Ok.
Downloading file ./lib/xml-apis-1.3.04.jar.
File ./lib/xml-apis-1.3.04.jar downloaded. Ok.
File ./lib/jcommon-1.0.21.jar downloaded. Ok.
File ./lib/jfreechart-1.0.17.jar downloaded. Ok.

# Compile file generating chartTest.jar 
# 
$ ./jarget exec scalac -- sample-scripts/chartTest.scala -d chartTest.jar 

# Run it 
$ ./jarget exec scala -- chartTest.jar 

# Make an uber jar 
#
$ ./jarget uber -scala -o chart-uber.jar -m chartTest.jar -p ./lib
Built file:  chart-uber.jar ok
Run it with: $ java -jar chart-uber.jar

$ java -jar chart-uber.jar


# Make a self-executable uber jar 
$ ./jarget uber -scala -sh -o chart-uber.sh -m chartTest.jar -p ./lib
Built file:  chart-uber.sh ok
Run it with: $ java -jar chart-uber.sh

# The resulting file can be run as a unix executable or script.
$ ./chart-uber.sh 
#+END_SRC

Example: Make a scala self-executable jar for the app jarget.

#+BEGIN_SRC sh 
$ scala jarget.jar uber -scala -sh -o jarget -m jarget.jar -j /home/archbox/opt/scala-2.12.3/lib/scala-xml_2.12-1.0.6.jar 
Built file:  jarget ok
Run it with: $ java -jar jarget

# Run it 
$ ./jarget 
#+END_SRC

Explanation: 

 + -o jarget - it will generate a uber jar file named jarget

 + -m jarget.jar - Jar file containing the Main class. The manifest
   file of this file will be included in the uber jar.

 + -j .../scala-xml_2.12-1.0.6.jar  - Add this library to jar file.

 + -scala - This flag bundles the scala runtime library
   scala-library.jar with the application.

 + -sh    - Makes the application an *nix executable that can be run
   with ./application -cmd1 arg1 -cmd2 ...
*** Classpath 


 - =$ jarget cpath -show=

Get class file of all jar files in ./lib directory.

#+BEGIN_SRC sh 
$ ./bin/jarget cpath -show
./lib/scala-library-2.12.1.jar:./lib/cats-macros_2.12-0.9.0.jar:./lib/cats-kernel_2.12-0.9.0.jar:./lib/cats-core_2.12-0.9.0.jar:./lib/machinist_2.12-0.6.1.jar:./lib/simulacrum_2.12-0.10.0.jar:.

$ scala -cp $(./bin/jarget cpath -show)
Welcome to Scala 2.12.3 (OpenJDK 64-Bit Server VM, Java 1.8.0_141).
Type in expressions for evaluation. Or try :help.

#+END_SRC

 - =$ jarget cpath -show [dir]=

Get class file of all jar files in a given directory.

#+BEGIN_SRC sh 
$ ./bin/jarget cpath -show ./lib
./lib/scala-library-2.12.1.jar:./lib/cats-macros_2.12-0.9.0.jar:./lib/cats-kernel_2.12-0.9.0.jar:./lib/cats-core_2.12-0.9.0.jar:./lib/machinist_2.12-0.6.1.jar:./lib/simulacrum_2.12-0.10.0.jar:.

#+END_SRC
*** System Information 
**** Show Enviroment Variables 

 - =$ jarget utils -env=

#+BEGIN_SRC sh 
$ jarget utils -env
   Environment Variable         Value
   ------------------------     --------------------------------------------------
   PATH                         /usr/local/sbin:/usr/local/bin:/usr/bin:/usr/li...
   XAUTHORITY                   /home/archbox/.Xauthority
   LC_MEASUREMENT               pt_BR.UTF-8
   LC_TELEPHONE                 pt_BR.UTF-8
   GDMSESSION                   xfce
   XDG_DATA_DIRS                /usr/local/share:/usr/share
   LC_TIME                      pt_BR.UTF-8
   DBUS_SESSION_BUS_ADDRESS     unix:path=/run/user/1001/bus
   XDG_CURRENT_DESKTOP          XFCE
   MAIL                         /var/spool/mail/archbox
   SSH_AGENT_PID                29199
   MOZ_PLUGIN_PATH              /usr/lib/mozilla/plugins
   COLORTERM                    truecolor
   SESSION_MANAGER              local/ghostpc:@/tmp/.ICE-unix/29194,unix/ghostp...
   LC_PAPER                     pt_BR.UTF-8
   LOGNAME                      archbox
   PWD                          /home/archbox/Documents/projects/jarget.scala
   WINDOWID                     73927890
   SHELL                        /bin/bash
   LC_ADDRESS                   pt_BR.UTF-8
   OLDPWD                       /home/archbox/test
   VISUAL                       emacs -Q -nw --no-site -eval "(progn (setq  inh...
   GTK_MODULES                  canberra-gtk-module
   XDG_SESSION_PATH             /org/freedesktop/DisplayManager/Session2
   XDG_SESSION_DESKTOP          xfce
   SHLVL                        3
   LC_IDENTIFICATION            pt_BR.UTF-8
   GLADE_CATALOG_PATH           :
   LC_MONETARY                  pt_BR.UTF-8
   DOCKER_HOST                  tcp://127.0.0.1:4243
   TERM                         xterm-256color
   XFILESEARCHPATH              /usr/dt/app-defaults/%L/Dt
   XDG_CONFIG_DIRS              /etc/xdg
   GLADE_PIXMAP_PATH            :
   XDG_SEAT_PATH                /org/freedesktop/DisplayManager/Seat0
   LANG                         en_US.utf8
   XDG_SESSION_TYPE             x11
   XDG_SESSION_ID               c87
   DISPLAY                      :0.0
   LC_NAME                      pt_BR.UTF-8
   _                            /usr/lib/jvm/default/bin/java
   XDG_GREETER_DATA_DIR         /var/lib/lightdm-data/archbox
   DESKTOP_SESSION              xfce
   USER                         archbox
   XDG_MENU_PREFIX              xfce-
   VTE_VERSION                  4803
   LC_NUMERIC                   pt_BR.UTF-8
   XDG_SEAT                     seat0
   SSH_AUTH_SOCK                /tmp/ssh-kO5hsOw4FbVp/agent.29198
   GLADE_MODULE_PATH            :
   EDITOR                       emacs -Q -nw --no-site -eval "(progn (setq  inh...
   NLSPATH                      /usr/dt/lib/nls/msg/%L/%N.cat
   QT_QPA_PLATFORMTHEME         qt5ct
   XDG_RUNTIME_DIR              /run/user/1001
   XDG_VTNR                     7
   HOME                         /home/archbox
   ------------------------     --------------------------------------------------


#+END_SRC

**** Show PATH Environment Variable 

 - =$ jarget utils -path=

#+BEGIN_SRC sh
  $ jarget utils -path
  /usr/local/sbin
  /usr/local/bin
  /usr/bin
  /usr/lib/jvm/default/bin
  /usr/bin/site_perl
  /usr/bin/vendor_perl
  /usr/bin/core_perl
  /home/archbox/opt/java/bin
  /home/archbox/opt/scala-2.11.8/bin/
  /home/archbox/bin
  /home/archbox/.local/bin
  /home/archbox/opt/cling/bin
  /home/archbox/opt/cling2
  /home/archbox/opt/eclipse
  /home/archbox/opt/fsformatting
  /home/archbox/opt/gambit-4.8.4/bin
  /home/archbox/opt/groovy-2.4.11/bin
  /home/archbox/opt/jars
  /home/archbox/opt/java/bin
  /home/archbox/opt/jdk/bin
  /home/archbox/opt/jdk1.8.0_20/bin
  /home/archbox/opt/maven/bin
  /home/archbox/opt/mobac
  /home/archbox/opt/scala/bin
  /home/archbox/opt/scala-2.12.3/bin
  /home/archbox/opt/vivaldi
  /home/archbox/opt/vscode
#+END_SRC

**** Show Java Properties 

 - =$ jarget utils -prop=

Show all Java properties from System.getProperties().

#+BEGIN_SRC sh 
$ jarget utils -prop
   Java Property                     Value
   -----------------------------     --------------------------------------------------
   java.runtime.name                 OpenJDK Runtime Environment
   sun.boot.library.path             /usr/lib/jvm/java-8-openjdk/jre/lib/amd64
   java.vm.version                   25.141-b15
   java.vm.vendor                    Oracle Corporation
   java.vendor.url                   http://java.oracle.com/
   path.separator                    :
   java.vm.name                      OpenJDK 64-Bit Server VM
   file.encoding.pkg                 sun.io
   user.country                      US
   sun.java.launcher                 SUN_STANDARD
   sun.os.patch.level                unknown
   java.vm.specification.name        Java Virtual Machine Specification
   user.dir                          /home/archbox/Documents/projects/jarget.scala
   java.runtime.version              1.8.0_141-b15
   java.awt.graphicsenv              sun.awt.X11GraphicsEnvironment
   java.endorsed.dirs                /usr/lib/jvm/java-8-openjdk/jre/lib/endorsed
   os.arch                           amd64
   java.io.tmpdir                    /tmp
   line.separator                    

   java.vm.specification.vendor      Oracle Corporation
   os.name                           Linux
   sun.jnu.encoding                  UTF-8
   java.library.path                 /usr/java/packages/lib/amd64:/usr/lib64:/lib64:...
   java.specification.name           Java Platform API Specification
   java.class.version                52.0
   sun.management.compiler           HotSpot 64-Bit Tiered Compilers
   os.version                        4.9.31-1-MANJARO
   user.home                         /home/archbox
   user.timezone                     
   java.awt.printerjob               sun.print.PSPrinterJob
   file.encoding                     UTF-8
   java.specification.version        1.8
   java.class.path                   /home/archbox/bin/jarget
   user.name                         archbox
   java.vm.specification.version     1.8
   sun.java.command                  /home/archbox/bin/jarget -system prop
   java.home                         /usr/lib/jvm/java-8-openjdk/jre
   sun.arch.data.model               64
   user.language                     en
   java.specification.vendor         Oracle Corporation
   awt.toolkit                       sun.awt.X11.XToolkit
   java.vm.info                      mixed mode
   java.version                      1.8.0_141
   java.ext.dirs                     /usr/lib/jvm/java-8-openjdk/jre/lib/ext:/usr/ja...
   sun.boot.class.path               /usr/lib/jvm/java-8-openjdk/jre/lib/resources.j...
   java.vendor                       Oracle Corporation
   file.separator                    /
   java.vendor.url.bug               http://bugreport.sun.com/bugreport/
   sun.io.unicode.encoding           UnicodeLittle
   sun.cpu.endian                    little
   sun.cpu.isalist                   
   -----------------------------     --------------------------------------------------

#+END_SRC
** Building Instructions 

Build jarget.jar by running 

 - =$ make=

#+BEGIN_SRC sh
# Build  
$ make 

# Run it with 
$ scala jarget.jar 
#+END_SRC

Build standalone jarget by running 

 - =$ make sh= 

#+BEGIN_SRC sh 
# Build 
$ make sh
scala jarget.jar uber -scala -sh -o bin/jarget -m jarget.jar -j /home/archbox/opt/scala/lib/scala-xml_2.12-1.0.6.jar
Built file:  bin/jarget ok
Run it with: $ java -jar bin/jarget

# Run it with 
$ ./bin/jarget 

# Or run it with 
$ java -jar bin/jarget

# Or ruin it with 
$ sh ./bin/jarget doc

#+END_SRC

Build and install standalone jarget tool in ~/bin 

 - =$ make install=

#+BEGIN_SRC sh 
# Build and install 
#
$ make install
scala jarget.jar uber -scala -sh -o bin/jarget -m jarget.jar -j /home/archbox/opt/scala/lib/scala-xml_2.12-1.0.6.jar
Built file:  bin/jarget ok
Run it with: $ java -jar bin/jarget
cp -v bin/jarget ~/bin
'bin/jarget' -> '/home/archbox/bin/jarget'

# Run it - Assuming that ~/bin is in $PATH. 
#
$ jarget
jarget - Tool to download jar packages.

Maven Packages / Jar Packages

 mvn -show [package]                 - Show package's information

 mvn -pom  [package]                 - Show package's pom file

... ... ... 
#+END_SRC

** Getting a Binary Release 

An fat-jar executable binary release can be downloaded from this link:

 - Most update Snapshot [[https://github.com/caiorss/jarget/raw/gh-pages/jarget][jarget Download]]

 - Release [[https://github.com/caiorss/jarget/raw/v1.0-release/jarget][jarget v1.0]]

 - Release [[https://github.com/caiorss/jarget/raw/v1.1-release/jarget][jarget v1.1]]

 - Release [[https://github.com/caiorss/jarget/raw/v1.2-release/jarget][jarget v1.2]]

 - Release [[https://github.com/caiorss/jarget/raw/v1.3-release/jarget][jarget v1.3]]

 - Release [[https://github.com/caiorss/jarget/raw/v1.3.1-release/jarget][jarget v1.3.1]]

 - Release [[https://github.com/caiorss/jarget/raw/v1.3.2-release/jarget][jarget v1.3.2]]

 - Release [[https://github.com/caiorss/jarget/raw/v1.4-release/jarget][jarget v1.4.0]]

Or it can be downloaded with those shell commands below: 

#+BEGIN_SRC sh
$ curl -O -L https://github.com/caiorss/jarget/raw/gh-pages/jarget
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100   130  100   130    0     0     28      0  0:00:04  0:00:04 --:--:--    32
100 5675k  100 5675k    0     0   490k      0  0:00:11  0:00:11 --:--:-- 1011k

$ chmod +x jarget

$ ./jarget 
jarget - Tool to download jar packages.

 -show [package]                 - Show package's information

 -pom  [package]                 - Show package's pom file

... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... 
#+END_SRC

Or 

#+BEGIN_SRC sh 
$ curl -O -L https://github.com/caiorss/jarget/raw/gh-pages/jarget && chmod +x jarget && ./jarget 
#+END_SRC

On Windows the application can be executed with: 

#+BEGIN_SRC sh 
$ java -jar jarget 

jarget - Tool to download jar packages.

 -show [package]                 - Show package's information

 -pom  [package]                 - Show package's pom file

 -get  [package]                 - Download package and dependencies to ./lib

 -get  [package] -dir [path]     - Download package and dependencies to [path] directory.

... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... 
#+END_SRC
** TODO Tasks 

 - [ ]  - Add search features.  
 - [ ]  - Add package cache 
 - [ ]  - Improve command line handling 
 - [ ]  - Improve error handling. 
 - [X]  - Feature to make Uber Jar 
 - [ ]  - Shrink the generated uber jar using Pro-guard. 
 - [ ]  - Create a Windows exe wrapper
 - [ ]  - Expose more Java Platform features through command line.


